@model ST10134934_CLDV6211_Part_Two.Models.Transaction
@using Microsoft.AspNetCore.Identity
@inject UserManager<IdentityUser> UserManager
@inject SignInManager<IdentityUser> SignInManager


@{
    ViewData["Title"] = "Create";
}

<h1>Process Order</h1>

<!-- <h4>Transaction</h4> -->
<hr />
<div class="row">
    <div class="col-md-4">


        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="ArtId" class="control-label"></label>
                <select asp-for="ArtId" class="form-control" asp-items="ViewBag.ArtId"></select>
            </div>
            <div class="form-group">
                <label asp-for="KuserId" class="control-label"></label>
                <select asp-for="KuserId" class ="form-control" asp-items="ViewBag.KuserId"></select>
            </div>
            <div class="form-group">
                @if (SignInManager.IsSignedIn(User) && User.IsInRole("User"))
                {
                <input type="submit" value="Create" class="btn btn-primary" />
                }
            </div>
        </form>



    </div>
</div>

<div>
        @if (SignInManager.IsSignedIn(User) && User.IsInRole("User"))
{
    <a asp-area="" asp-controller="Products" asp-action="Index">Back to Artwork </a>
}
    @if (SignInManager.IsSignedIn(User) && User.IsInRole("Admin"))
{
    <a asp-area="" asp-action="Index">Back to Processing </a>
}
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
